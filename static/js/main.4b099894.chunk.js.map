{"version":3,"sources":["components/Heading.jsx","components/CreateNote.jsx","components/Footer.jsx","components/Note.jsx","App.js","index.js"],"names":["Heading","className","CreateNote","props","useState","title","text","note","setNote","handleChange","e","target","name","value","pre","autoComplete","onChange","type","placeholder","rows","cols","onClick","passNote","preventDefault","Footer","year","Date","getFullYear","Note","handleClick","id","content","App","notes","setNotes","deleteNote","noteId","index","filter","map","key","ReactDOM","render","document","getElementById"],"mappings":"oNAQeA,MANf,WACE,OACE,wBAAIC,UAAU,WAAd,mB,gCCwDWC,MAxDf,SAAoBC,GAAQ,IAAD,EACDC,mBAAS,CAC7BC,MAAO,GACPC,KAAM,KAHe,mBAClBC,EADkB,KACZC,EADY,KAgBzB,SAASC,EAAaC,GAAI,IAAD,EACDA,EAAEC,OAAjBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAKbL,GAAQ,SAACM,GACP,OAAO,eACFA,EADL,eAEGF,EAAMC,OAoBb,OACE,6BACA,0BAAMZ,UAAU,OAAOc,aAAa,OAClC,2BAAOC,SAAUP,EAAcG,KAAK,QAAQK,KAAK,OAAOC,YAAY,gBAAgBL,MAAON,EAAKF,QAChG,8BAAWW,SAAUP,EAAcG,KAAK,OAAOO,KAAK,IAAIC,KAAK,KAAKF,YAAY,aAAaL,MAAQN,EAAKD,OACxG,4BAAQe,QA5CZ,SAAmBX,GACjBP,EAAMmB,SAASf,GACfG,EAAEa,iBAEFf,EAAQ,CACNH,MAAO,GACPC,KAAM,OAsCsB,kBAAC,IAAD,CAASW,KAAK,eC7CjCO,MAPf,WACE,IAAIC,GAAO,IAAIC,MAAOC,cACtB,OACE,kDAA0BF,EAA1B,sB,gBCiBWG,MAlBf,SAAczB,GAEZ,SAAS0B,IACP1B,EAAMmB,SAASnB,EAAM2B,IAKvB,OACE,yBAAK7B,UAAU,QACf,wBAAIA,UAAW,UAAUE,EAAME,OAC/B,wBAAIJ,UAAW,UAAUE,EAAM4B,SAC/B,kBAAC,IAAD,CAAiB9B,UAAU,mBAAmBoB,QAASQ,GAAa,4BAAQR,QAASQ,EAAa5B,UAAW,oBAAzC,aCiCzD+B,MA1Cf,WAAgB,IAAD,EACa5B,mBAAS,IADtB,mBACN6B,EADM,KACCC,EADD,KASb,SAASC,EAAWC,GAClBF,GACE,SAACpB,EAAIuB,GAAW,OAAOJ,EAAMK,QAAO,SAAC/B,EAAM8B,GAAP,OAAeA,IAAUD,QAMjE,OACE,6BACE,yBAAKnC,UAAU,eACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYqB,SAlBhB,SAAiBf,GACf2B,GAAS,SAACpB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAeP,UAiBf,yBAAKN,UAAU,aAEbgC,EAAMM,KAAI,SAAChC,EAAK8B,GAChB,OAAS,kBAAC,EAAD,CACPG,IAAMH,EACNP,GAAKO,EACLhC,MAASE,EAAKF,MACd0B,QAAWxB,EAAKD,KAChBgB,SAAYa,SAOlB,kBAAC,EAAD,CAAQlC,UAAU,kBCvCtBwC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.4b099894.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Heading() {\n  return (\n    <h1 className=\"heading\">To Do List App</h1>\n  );\n}\n\nexport default Heading;\n","import React, {useState} from 'react';\n\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction CreateNote(props) {\n  const [note, setNote] = useState({ // set the initial state to nothing\n      title: \"\",\n      text: \"\"\n  });\n\n  function handClick(e) {\n    props.passNote(note); // when the user clicks the add button, i pass the note obj back to App.js using the getNote function being passed here\n    e.preventDefault();\n    // set the title and text fields back to empty\n    setNote({\n      title: \"\",\n      text: \"\"\n    })\n  }\n\n  function handleChange(e) {\n    const {name, value} = e.target; // deconstruct the obj\n    // when the user clicks on one of the fields,\n    //I check the name propperty from the e.target object\n    // if it is title, then i get the value of the title field and spread the previous value to it\n    // finally i return it\n    setNote((pre) => {\n      return ({\n        ...pre,\n        [name]:value})\n    })\n    // if i dont use the above approach, i have to set one state for input and one state for textarea to change it\n    // or i can use the below syntax which is longer but more readable\n    // if (name == \"title\") {\n    //   setNote((pre) =>{\n    //   return  {title: value,\n    //     text: pre.text}\n    //   })\n    // } else {\n    //   setNote((pre)=>{\n    //     return {\n    //       title: pre.title,\n    //       text: value\n    //     }\n    //   })\n    // }\n  }\n  // end of handleChange\n\n  return (\n    <div>\n    <form className=\"form\" autoComplete=\"off\">\n      <input onChange={handleChange} name=\"title\" type=\"text\" placeholder=\"Enter A Title\" value={note.title}></input>\n      <textarea  onChange={handleChange} name=\"text\" rows=\"3\" cols=\"50\" placeholder=\"Enter Text\" value= {note.text}></textarea>\n      <button onClick={handClick}><AddIcon type=\"submit\"></AddIcon></button>\n    </form>\n    </div>\n  );\n}\n\nexport default CreateNote;\n","import React from 'react';\n\nfunction Footer() {\n  var year = new Date().getFullYear();\n  return (\n    <footer>&copy; Copyright {year} eddieprogramming</footer>\n  );\n}\n\nexport default Footer;\n","import React, {useState} from \"react\";\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\n\n\nfunction Note(props) {\n\n  function handleClick() {\n    props.passNote(props.id)\n    // use the id being passed here to identify which note and use the getNote function being passed here\n    // get pass the id back to App.js for deletion since App.js has the array to manipulate\n  }\n\n  return (\n    <div className=\"note\">\n    <h1 className= \"noteh1\">{props.title}</h1>\n    <h3 className= \"noteh3\">{props.content}</h3>\n    <RemoveSharpIcon className=\"noteDeleteButton\" onClick={handleClick}><button onClick={handleClick} className= \"noteDeleteButton\">Delete</button></RemoveSharpIcon>\n    </div>\n  );\n\n}\n\nexport default Note;\n","import React, {useState} from 'react';\nimport Heading from \"./components/Heading\";\nimport CreateNote from \"./components/CreateNote\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport RemoveSharpIcon from '@material-ui/icons/RemoveSharp';\n\nfunction App() {\n  const [notes, setNotes] = useState([]); // set an empty array of notes to store all the notes being passed here\n\n  function addNote(note) {\n    setNotes((pre) =>{\n      return [...pre,note]; // return a new array, spreading the previous array with the new note added\n    })\n  }\n\n  function deleteNote(noteId) {\n    setNotes(\n      (pre,index) => {return notes.filter((note, index)=>index !== noteId)}\n      // use filter function to filter out the note with the id that is the same as the current array\n      // because of the result of the delete button\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"mainWrapper\">\n      <Heading />\n      <CreateNote passNote={addNote} />\n      <div className=\"container\">\n      {\n        notes.map((note,index) =>{\n        return ( <Note\n          key= {index}\n          id= {index}\n          title = {note.title}\n          content = {note.text}\n          passNote = {deleteNote}\n          />)\n        })\n      }\n      </div>\n\n      </div>\n    <Footer className=\"footerClass\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( < App / > , document.getElementById('root'));\n"],"sourceRoot":""}